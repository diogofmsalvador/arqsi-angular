{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; // tslint:disable-next-line:class-name\n\nexport let logInService = /*#__PURE__*/(() => {\n  class logInService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'https://localhost:5001/api/User';\n      this.customHeaders = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': 'true',\n        'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS,POST,PUT',\n        'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept, Authorization, access-control-allow-methods, access-control-allow-headers, Access-Control-Allow-Origin, X-XSRF-TOKEN'\n      });\n    }\n\n    logInRequest(user) {\n      return this.http.post(`${this.url}/Login`, user, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    getALlUsersTest() {\n      return this.http.get(`${this.url}`, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    addUser(user) {\n      return this.http.post(`${this.url}`, user, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    addTagsToUser(Tags, idUser) {\n      const userTag = {\n        idUser: idUser,\n        tagDescription: Tags\n      };\n      return this.http.post(`${this.url}/addTagsToUser`, userTag, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    getTagsFromUser(userId) {\n      return this.http.get(`${this.url}/getTagsUser/${userId}`, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    updateUser(userdto) {\n      return this.http.put(`${this.url}`, userdto, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    getUserByUsername(username) {\n      return this.http.get(`${this.url}/getUserByUsername/${username}`, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    getUserById(userId) {\n      return this.http.get(`${this.url}/${userId}`, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    deleteUser(userId) {\n      return this.http.delete(`${this.url}/${userId}`, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n  }\n\n  logInService.ɵfac = function logInService_Factory(t) {\n    return new (t || logInService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  logInService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: logInService,\n    factory: logInService.ɵfac,\n    providedIn: 'root'\n  });\n  return logInService;\n})();","map":null,"metadata":{},"sourceType":"module"}