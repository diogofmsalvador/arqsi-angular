{"ast":null,"code":"import { IntroductionMessageDialogComponent } from \"../introduction-message-dialog/introduction-message-dialog.component\";\nimport { RelationString } from \"../../dto/RelationString\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../log-in-component/Service/logInService\";\nimport * as i2 from \"../../Services/shareMessage\";\nimport * as i3 from \"../../Services/RelationService\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/snack-bar\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/slider\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\n\nfunction FriendPanelComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ÉµÉµgetCurrentView();\n\n    i0.ÉµÉµelementStart(0, \"div\", 10);\n    i0.ÉµÉµelementStart(1, \"button\", 11);\n    i0.ÉµÉµlistener(\"click\", function FriendPanelComponent_div_8_Template_button_click_1_listener() {\n      i0.ÉµÉµrestoreView(_r4);\n      const ctx_r3 = i0.ÉµÉµnextContext();\n      return ctx_r3.openDialog();\n    });\n    i0.ÉµÉµtext(2, \"Pedir introdu\\u00E7\\u00E3o\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementEnd();\n  }\n}\n\nfunction FriendPanelComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ÉµÉµgetCurrentView();\n\n    i0.ÉµÉµelementStart(0, \"div\", 3);\n    i0.ÉµÉµelementStart(1, \"h4\", 12);\n    i0.ÉµÉµtext(2, \"Como classifica a sua rela\\u00E7\\u00E3o com x?\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"div\", 13);\n    i0.ÉµÉµelementStart(4, \"mat-slider\", 14);\n    i0.ÉµÉµlistener(\"input\", function FriendPanelComponent_div_10_Template_mat_slider_input_4_listener($event) {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r5 = i0.ÉµÉµnextContext();\n      return ctx_r5.onInputChange($event);\n    })(\"ngModelChange\", function FriendPanelComponent_div_10_Template_mat_slider_ngModelChange_4_listener($event) {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r7 = i0.ÉµÉµnextContext();\n      return ctx_r7.slider_value = $event;\n    });\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(5, \"div\", 13);\n    i0.ÉµÉµelementStart(6, \"button\", 15);\n    i0.ÉµÉµlistener(\"click\", function FriendPanelComponent_div_10_Template_button_click_6_listener() {\n      i0.ÉµÉµrestoreView(_r6);\n      const ctx_r8 = i0.ÉµÉµnextContext();\n      return ctx_r8.updateConnectionOpinion();\n    });\n    i0.ÉµÉµtext(7, \"Atualizar opini\\u00E3o\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelement(8, \"hr\", 16);\n    i0.ÉµÉµelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(4);\n    i0.ÉµÉµproperty(\"displayWith\", ctx_r1.formatLabel)(\"ngModel\", ctx_r1.slider_value)(\"tickInterval\", ctx_r1.getSliderTickInterval());\n  }\n}\n\nfunction FriendPanelComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ÉµÉµgetCurrentView();\n\n    i0.ÉµÉµelementStart(0, \"div\", 3);\n    i0.ÉµÉµelementStart(1, \"h4\", 12);\n    i0.ÉµÉµtext(2, \"Qual a sua rela\\u00E7\\u00E3o com x?\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(3, \"div\", 10);\n    i0.ÉµÉµelementStart(4, \"mat-form-field\", 17);\n    i0.ÉµÉµelementStart(5, \"mat-label\");\n    i0.ÉµÉµelement(6, \"i\", 18);\n    i0.ÉµÉµtext(7, \" Estado emocional\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(8, \"mat-select\", 19);\n    i0.ÉµÉµlistener(\"valueChange\", function FriendPanelComponent_div_11_Template_mat_select_valueChange_8_listener($event) {\n      i0.ÉµÉµrestoreView(_r10);\n      const ctx_r9 = i0.ÉµÉµnextContext();\n      return ctx_r9.relation_state_message = $event;\n    });\n    i0.ÉµÉµelementStart(9, \"mat-option\", 20);\n    i0.ÉµÉµtext(10, \"Amigos\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(11, \"mat-option\", 20);\n    i0.ÉµÉµtext(12, \"Colegas\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(13, \"mat-option\", 20);\n    i0.ÉµÉµtext(14, \"Namorado | Namorada\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(15, \"mat-option\", 20);\n    i0.ÉµÉµtext(16, \"Casados\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(17, \"mat-option\", 20);\n    i0.ÉµÉµtext(18, \"Divorciados\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(19, \"div\", 13);\n    i0.ÉµÉµelementStart(20, \"button\", 15);\n    i0.ÉµÉµlistener(\"click\", function FriendPanelComponent_div_11_Template_button_click_20_listener() {\n      i0.ÉµÉµrestoreView(_r10);\n      const ctx_r11 = i0.ÉµÉµnextContext();\n      return ctx_r11.updateRelation();\n    });\n    i0.ÉµÉµtext(21, \"Atualizar rela\\u00E7\\u00E3o\");\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelement(22, \"hr\", 16);\n    i0.ÉµÉµelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµadvance(8);\n    i0.ÉµÉµproperty(\"value\", ctx_r2.relation_state_message);\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµproperty(\"value\", ctx_r2.relationString.FRIENDS);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"value\", ctx_r2.relationString.COLLEAGUES);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"value\", ctx_r2.relationString.BOYFRIENDS);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"value\", ctx_r2.relationString.MARRIED);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"value\", ctx_r2.relationString.DIVORCED);\n  }\n}\n\nexport let FriendPanelComponent = /*#__PURE__*/(() => {\n  class FriendPanelComponent {\n    constructor(_user, shareMessageService, _relation, dialog, _snackBar) {\n      this._user = _user;\n      this.shareMessageService = shareMessageService;\n      this._relation = _relation;\n      this.dialog = dialog;\n      this._snackBar = _snackBar;\n      this.horizontalPosition = 'center';\n      this.verticalPosition = 'top';\n      this.durationInSeconds = 5;\n      this.isFriend = false;\n      this.nome_utilizador = \"\";\n      this.username_message = \"\";\n      this.email_message = \"\";\n      this.telemovel_message = \"\";\n      this.relationString = RelationString;\n      this.slider_value = 0;\n      this.tickInterval = 1;\n    }\n\n    ngOnInit() {\n      this.shareMessageService.currentMessage.subscribe(message => {\n        if (message != null) {\n          // @ts-ignore\n          this.user_id_message = message.user_id; // @ts-ignore\n\n          this.nome_utilizador = message.nome; // @ts-ignore\n\n          this.username_message = message.username; // @ts-ignore\n\n          this.email_message = message.email; // @ts-ignore\n\n          this.emotional_state_message = message.emotional_State; // @ts-ignore\n\n          this.telemovel_message = message.phone_Number; // @ts-ignore\n\n          this.data_message = message.data_Nasc_User; // @ts-ignore\n\n          this.tags_message = message.tags_Of_User;\n        }\n\n        this._relation.getRelationOfUser(this.user_id_message).subscribe(result => {\n          this.isFriend = false;\n          console.log(result.body);\n\n          this._user.getUserByUsername(localStorage.getItem('username')).subscribe(resultUser => {\n            var _a, _b, _c;\n\n            console.log(resultUser.body);\n\n            for (let i in result.body) {\n              // @ts-ignore\n              if (result.body[i].id_UserA == this.user_id_message && ((_a = resultUser.body) === null || _a === void 0 ? void 0 : _a.id_User) == result.body[i].id_UserB) {\n                this.isFriend = true; // @ts-ignore\n\n                this.relation_state_message = result.body[i].relation_Type; // @ts-ignore\n\n                console.log(result.body[i]); // @ts-ignore\n\n                this.slider_value = result.body[i].connection_Opinion_B_To_A;\n              } // @ts-ignore\n\n\n              if (((_b = result.body[i]) === null || _b === void 0 ? void 0 : _b.id_UserB) == this.user_id_message && ((_c = resultUser.body) === null || _c === void 0 ? void 0 : _c.id_User) == result.body[i].id_UserA) {\n                this.isFriend = true; // @ts-ignore\n                // @ts-ignore\n\n                this.relation_state_message = result.body[i].relation_Type; // @ts-ignore\n\n                console.log(result.body[i]); // @ts-ignore\n\n                this.slider_value = result.body[i].connection_Opinion_B_To_A; // @ts-ignore\n              }\n            }\n          });\n        });\n      });\n    }\n\n    formatLabel(value) {\n      if (value >= 10) {\n        return Math.round(value);\n      }\n\n      return value;\n    }\n\n    openDialog() {\n      const dialogRef = this.dialog.open(IntroductionMessageDialogComponent, {\n        width: '400px' // data: {name: this.name, animal: this.animal},\n\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result != null || result != undefined) {\n          //logica\n          this.openSnackBar();\n          ;\n        }\n\n        console.log(result); //this.animal = result;\n      });\n    }\n\n    openSnackBar() {\n      this._snackBar.open('IntroduÃ§Ã£o a utilizador solicitada com sucesso. ðŸ¤ª', 'Fechar', {\n        duration: this.durationInSeconds * 1000,\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition\n      });\n    }\n\n    updateRelation() {\n      this._user.getUserByUsername(localStorage.getItem('username')).subscribe(result => {\n        var _a;\n\n        const dto = {\n          relation_Type: this.relation_state_message\n        };\n        console.log(result); // @ts-ignore\n\n        this._relation.updateRelation((_a = result.body) === null || _a === void 0 ? void 0 : _a.id_User, this.user_id_message, dto).subscribe(resultNext => {\n          console.log(resultNext);\n          alert('RelaÃ§Ã£o editada com sucesso!');\n        });\n      });\n    }\n\n    updateConnectionOpinion() {\n      console.log(this.slider_value);\n\n      this._user.getUserByUsername(localStorage.getItem('username')).subscribe(result => {\n        var _a; // @ts-ignore\n\n\n        this._relation.getRelationOfUser((_a = result.body) === null || _a === void 0 ? void 0 : _a.id_User).subscribe(resultGetRelation => {\n          var _a, _b, _c, _d;\n\n          console.log(resultGetRelation.body);\n          let dtoConnection = {}; // @ts-ignore\n\n          for (let i = 0; i < resultGetRelation.body.length; i++) {\n            console.log(\"=========================\");\n            console.log(\"test a --> \" + ((_a = result.body) === null || _a === void 0 ? void 0 : _a.id_User));\n            console.log(\"test b --> \" + this.user_id_message); // @ts-ignore\n\n            console.log(\"user b --> \" + resultGetRelation.body[i].id_UserB); // @ts-ignore\n\n            console.log(\"user a --> \" + resultGetRelation.body[i].id_UserA);\n            console.log(\"=========================\"); // @ts-ignore\n\n            if (resultGetRelation.body[i].id_UserA == ((_b = result.body) === null || _b === void 0 ? void 0 : _b.id_User) && resultGetRelation.body[i].id_UserB == this.user_id_message) {\n              dtoConnection = {\n                // @ts-ignore\n                connectionOpinion_Of_UserA: this.slider_value\n              };\n            } // @ts-ignore\n\n\n            if (resultGetRelation.body[i].id_UserB == ((_c = result.body) === null || _c === void 0 ? void 0 : _c.id_User) && resultGetRelation.body[i].id_UserA == this.user_id_message) {\n              dtoConnection = {\n                // @ts-ignore\n                connectionOpinion_Of_UserA: this.slider_value\n              };\n            }\n          } // @ts-ignore\n\n\n          this._relation.updateRelation((_d = result.body) === null || _d === void 0 ? void 0 : _d.id_User, this.user_id_message, dtoConnection).subscribe(resultNext => {\n            alert('OpiniÃ£o editada com sucesso!');\n          });\n        });\n      });\n    }\n\n    onInputChange(event) {\n      this.slider_value = event.value;\n    }\n\n    getSliderTickInterval() {\n      if (this.slider_value) {\n        return this.slider_value ? 'auto' : this.tickInterval;\n      }\n\n      return 7;\n    }\n\n  }\n\n  FriendPanelComponent.Éµfac = function FriendPanelComponent_Factory(t) {\n    return new (t || FriendPanelComponent)(i0.ÉµÉµdirectiveInject(i1.logInService), i0.ÉµÉµdirectiveInject(i2.shareMessage), i0.ÉµÉµdirectiveInject(i3.RelationService), i0.ÉµÉµdirectiveInject(i4.MatDialog), i0.ÉµÉµdirectiveInject(i5.MatSnackBar));\n  };\n\n  FriendPanelComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: FriendPanelComponent,\n    selectors: [[\"app-friend-panel\"]],\n    decls: 22,\n    vars: 9,\n    consts: [[1, \"d-flex\", \"justify-content-center\", 2, \"margin-bottom\", \"5px\", \"margin-top\", \"30px\"], [1, \"row\"], [1, \"fas\", \"fa-user-circle\", 2, \"font-size\", \"200px\"], [1, \"row\", 2, \"text-align\", \"center\", \"margin-top\", \"15px\"], [2, \"margin-bottom\", \"5px\"], [1, \"mt-1\"], [\"class\", \"d-flex justify-content-center\", 4, \"ngIf\"], [2, \"margin-top\", \"15px\"], [\"class\", \"row\", \"style\", \"text-align: center; margin-top: 15px\", 4, \"ngIf\"], [1, \"row\", 2, \"text-align\", \"center\", \"margin-top\", \"5px\"], [1, \"d-flex\", \"justify-content-center\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [2, \"margin-bottom\", \"10px\"], [1, \"d-flex\", \"justify-content-center\", \"h-100\"], [\"thumbLabel\", \"\", \"tickInterval\", \"1\", \"step\", \"1\", \"min\", \"0\", \"max\", \"10\", \"aria-label\", \"units\", 3, \"displayWith\", \"ngModel\", \"tickInterval\", \"input\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"click\"], [2, \"margin-top\", \"30px\"], [\"appearance\", \"fill\"], [1, \"fas\", \"fa-layer-group\"], [3, \"value\", \"valueChange\"], [3, \"value\"]],\n    template: function FriendPanelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0);\n        i0.ÉµÉµelementStart(1, \"div\", 1);\n        i0.ÉµÉµelement(2, \"i\", 2);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(3, \"div\", 3);\n        i0.ÉµÉµelementStart(4, \"h2\", 4);\n        i0.ÉµÉµtext(5);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(6, \"h5\", 5);\n        i0.ÉµÉµtext(7);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtemplate(8, FriendPanelComponent_div_8_Template, 3, 0, \"div\", 6);\n        i0.ÉµÉµelement(9, \"hr\", 7);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµtemplate(10, FriendPanelComponent_div_10_Template, 9, 3, \"div\", 8);\n        i0.ÉµÉµtemplate(11, FriendPanelComponent_div_11_Template, 23, 6, \"div\", 8);\n        i0.ÉµÉµelementStart(12, \"div\", 9);\n        i0.ÉµÉµelementStart(13, \"h3\");\n        i0.ÉµÉµtext(14);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(15, \"h3\");\n        i0.ÉµÉµtext(16);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(17, \"h3\");\n        i0.ÉµÉµtext(18);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelement(19, \"hr\");\n        i0.ÉµÉµelementStart(20, \"h3\");\n        i0.ÉµÉµtext(21);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ÉµÉµadvance(5);\n        i0.ÉµÉµtextInterpolate(ctx.nome_utilizador);\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµtextInterpolate(ctx.username_message);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"ngIf\", !ctx.isFriend);\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµproperty(\"ngIf\", ctx.isFriend);\n        i0.ÉµÉµadvance(1);\n        i0.ÉµÉµproperty(\"ngIf\", ctx.isFriend);\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµtextInterpolate1(\"Email: \", ctx.email_message, \"\");\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµtextInterpolate1(\"Telem\\u00F3vel: \", ctx.telemovel_message, \"\");\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµtextInterpolate1(\"Data de nascimento: \", ctx.data_message, \"\");\n        i0.ÉµÉµadvance(3);\n        i0.ÉµÉµtextInterpolate1(\"Tags do utlizador: \", ctx.tags_message, \"\");\n      }\n    },\n    directives: [i6.NgIf, i7.MatButton, i8.MatSlider, i9.NgControlStatus, i9.NgModel, i10.MatFormField, i10.MatLabel, i11.MatSelect, i12.MatOption],\n    styles: [\".icon-user[_ngcontent-%COMP%]{color:#c57474}mat-slider[_ngcontent-%COMP%]{text-align:center;width:300px}mat-form-field[_ngcontent-%COMP%]{width:300px}\"]\n  });\n  return FriendPanelComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}