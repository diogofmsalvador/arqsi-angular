{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../log-in-component/Service/logInService\";\nexport let IntroductionService = /*#__PURE__*/(() => {\n  class IntroductionService {\n    constructor(http, userService) {\n      this.http = http;\n      this.userService = userService;\n      this.url = 'https://localhost:5001/api/Introduction';\n      this.customHeaders = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Credentials': 'true',\n        'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS,POST,PUT',\n        'Access-Control-Allow-Headers': 'Origin, Content-Type, Accept, Authorization, access-control-allow-methods, access-control-allow-headers, Access-Control-Allow-Origin, X-XSRF-TOKEN'\n      });\n    }\n\n    addIntroductionBeginner(message, idUser, idUserObjective) {\n      const newIntroductionBegginer = {\n        _idUserMiddle: idUser,\n        _idUserObjective: idUserObjective,\n        _messageUserMiddle: message\n      };\n      console.log(newIntroductionBegginer);\n      return this.http.post(`${this.url}/beginner-introdution`, newIntroductionBegginer, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    DeleteIntroduction(idIntroduction) {\n      return this.http.delete(`${this.url}/beginner-introdution/${idIntroduction}`, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    AproveOrRejectIntroduction(introductionId, status, idUser) {\n      return this.http.put(`${this.url}/ApproveOrRejectIntroduction/${idUser}/${introductionId}/${status}`, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n    AddMessagesToIntroduction(introductionId, messageTofriend, messageToObjective, userId) {\n      const SetMessagesDTO = {\n        _messageToFriend: messageTofriend,\n        _messageToObjective: messageToObjective\n      };\n      return this.http.put(`${this.url}/messagesToIntroduction/${userId}/${introductionId}`, SetMessagesDTO, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    } // passar so id introduction , menssagens  e responseStrings\n\n\n    updateIntroduction(introductionDto) {\n      return this.http.put(`${this.url}`, introductionDto, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    } // status awaiting ou pending\n\n\n    GetPendingOrAwaitingIntroductionRequests(userId, isuserMiddle) {\n      return this.http.get(`${this.url}/getIntroductions/${userId}/${isuserMiddle}`, {\n        headers: this.customHeaders,\n        withCredentials: false,\n        observe: 'response'\n      });\n    }\n\n  }\n\n  IntroductionService.ɵfac = function IntroductionService_Factory(t) {\n    return new (t || IntroductionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.logInService));\n  };\n\n  IntroductionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IntroductionService,\n    factory: IntroductionService.ɵfac,\n    providedIn: 'root'\n  });\n  return IntroductionService;\n})();","map":null,"metadata":{},"sourceType":"module"}